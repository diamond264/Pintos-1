Copying tests/vm/page-parallel into /tmp/5kRQ5chLsp.dsk...
Copying tests/vm/child-linear into /tmp/5kRQ5chLsp.dsk...
Writing command line to /tmp/Ll5dF4CayP.dsk...
warning: can't find squish-pty, so terminal input will fail
bochs -q
Kernel command line: -q -f put page-parallel put child-linear run page-parallel
Pintos booting with 4,096 kB RAM...
374 pages available in kernel pool.
374 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hd0:0: detected 1,008 sector (504 kB) disk, model "Generic 1234", serial "BXHD00011"
hd0:1: detected 4,032 sector (1 MB) disk, model "Generic 1234", serial "BXHD00012"
hd1:0: detected 1,008 sector (504 kB) disk, model "Generic 1234", serial "BXHD00021"
hd1:1: detected 8,064 sector (3 MB) disk, model "Generic 1234", serial "BXHD00022"
Formatting file system...done.
Boot complete.
Putting 'page-parallel' into the file system...
Putting 'child-linear' into the file system...
Executing 'page-parallel':
(page-parallel) begin
(page-parallel) exec "child-linear"
(page-parallel) exec "child-linear"
index is 0
index is 0
index is 0
index is 0
index is 0
index is 0
index is 0
index is 0
index is 0
index is 0
index is 0
Kernel PANIC at ../../userprog/pagedir.c:67 in lookup_page(): assertion `pd != NULL' failed.
Call stack: 0xc01071fc 0xc010a06e 0xc010a32c 0xc010cfda 0xc010d039 0xc010984b 0xc0101017.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 2629 ticks
Thread: 0 idle ticks, 339 kernel ticks, 2290 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 168 reads, 410 writes
hd1:0: 200 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1461 characters output
Keyboard: 0 keys pressed
Exception: 2 page faults
Powering off...

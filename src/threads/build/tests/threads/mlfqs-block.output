Writing command line to /tmp/g9Q95MDKBD.dsk...
warning: can't find squish-pty, so terminal input will fail
bochs -q
Kernel command line: -q -mlfqs run mlfqs-block
Pintos booting with 4,096 kB RAM...
374 pages available in kernel pool.
374 pages available in user pool.
Calibrating timer...  204,600 loops/s.
Boot complete.
Executing 'mlfqs-block':
(mlfqs-block) begin
(mlfqs-block) Main thread acquiring lock.
(mlfqs-block) Main thread creating block thread, sleeping 25 seconds...
(mlfqs-block) Block thread spinning for 20 seconds...
(mlfqs-block) Block thread acquiring lock...
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc0107ba8
 cr2=00000008 error=00000000
 eax=00000004 ebx=00000004 ecx=c0116030 edx=00000001
 esi=00000000 edi=00000000 esp=c0116030 ebp=c0116f40
 cs=0008 ds=0010 es=0010 ss=000a
Kernel PANIC at ../../threads/interrupt.c:373 in intr_handler(): Unexpected interrupt
Call stack: 0xc010761c 0xc01018f9 0xc01019ef 0xc0107ba8 0xc0108037 0xc010821f 0xc010826a 0xc0102eb0 0xc010bdcf 0xc01010be.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 2054 ticks
Thread: 0 idle ticks, 2054 kernel ticks, 0 user ticks
Console: 1128 characters output
Keyboard: 0 keys pressed
Powering off...
